# 1부터 100까지의 숫자를 출력시켜본다.
# 출력 결과는 다음과 같게한다.
"""
숫자가 홀수라면 홀수
짝수라면 짝수를 다음과 같은 형식으로 출력하라.

1 : 홀수
2 : 짝수
숫자 : 홀수
숫자 : 짝수
숫자 : 홀수
숫자 : 짝수
...
100 : 짝수

"""
# Hint : Modular 연산을 이용하라. "%" 기호를 사용하며, 두 숫자의 나머지를 출력해준다.

for i in range(1, 101):
    if(i % 2 == 0):
        print(str(i) + " : 짝수")
    else:
        print(str(i) + " : 홀수")

# 여기서 잠깐 잊어버렸을 수 있기에 짚고 넘어가보자.
# 분명 print(i + " : 짝수 or 홀수") 사용한 사람이 있을거다.
# 하지만 range에서 만들어진 리스트의 요소들은 int의 형태, 그대로 i로 넘어왔기 때문에 정수 형태이다.
# 하지만 아까 문제처럼 i + "문자열" 이라고 작성했다면
# 지금 정수 + 문자열을 시도한거다.
# 이는 연산 자체를 할 수 없으므로, python은 오류를 내 뱉을거다.
# 그렇기에 형변환을 해주어야한다. str() -> 문자열 형태로 현변환을 해줌.

###############################################################################
# 지금까지 print() 함수를 써오면서 형변환을 계속 해주는게 번거롭지는 않았는가?
# 이제부터 편하게 만들어줄 방법을 하나 설명해주겠다.

# < formatting(포멧팅) >
# 사용법은 이러하다

print()
input("format에 대한 설명 코드의 결과를 보려면 Enter키를 눌러주세요.")
print()

num = 1
print("{} 는 1입니다.".format(num))

# 쌍따옴표(")에 문자열, 문자를 적으면서 중괄호를 사용하는 것이다.
# 쉽게 설명하자면 문자열의 구멍을 낸다고 생각하면 된다.
# 그 뒤에 .format()이라고 적으면, 그 구멍과 연결된다.
# 그리고 .format() 내부에 변수를 넣으면 문자열 안으로 들어간다.
# 여러개도 가능하다.

print("========================")

num1 = 1
num2 = 2
print("{} {} 는 각각 1과 2입니다.".format(num1, num2))

# 이 처럼 .format()을 사용하여 내부에 순서대로 데이터를 삽입할 수 있다.(문자열로)
# 여기서 조금 더 응용을 해보겠다. ("머리 아플수도...")

print("========================")

num1 = 1
num2 = 2
text = "{} {} 는 각각 1과 2입니다."
print(text.format(num1, num2))

# 쌍따옴표로 묶어줬기 때문에 text도 하나의 문자열이다. 그런데 구멍이 뚫린!!
# 위와 같은 형태도 가능하다. (알아둘 것)

# mission6 정답 예시
print("========================")
for num in range(1,101):

    odd_form = " {} : 홀수!"

    if(num % 2 == 0):
        print(str(num) + " : 짝수!")    # 형변환을 사용한 예시
    else:
        print(odd_form.format(num))     # formatting을 사용한 예시

###############################################################################

# 여기까지 잘 따라왔다면 웬만한 프로그램들은 전부 만들 수 있을 것이다.
# 하지만 아직 효율적으로 코드를 짤 수는 없을 것이다.
# 이제부터는 효율적으로 코드를 짤 수 있는 방법들을 알려줄 것이다.