# List(리스트)
# 데이터를 보관, 장바구니라고 생각하면 됨. - 비슷한 유형의 데이터들을 모아둘 떄 사용함.

datalist = [1,2,3,4,5,6,7,8,9,10] # 데이터는 ','로 구분한다.
dataList = [1, "seungwon", "사과"] # 리스트에는 원하는 데이터를 담을 수 있다.(숫자, 문자열, boolean, 심지어 리스트 자신도 담을 수 있음)

# 출력해보자
print(dataList[2])
# 결과 값 : 사과

"""
위와 같은 결과가 나온 이유는 index(인덱스) 때문이다.
컴퓨터는 숫자를 1부터 세는게 아닌 0부터 센다.
index numbet(인덱스 넘버)도 마찬가지로 0으로 시작하기 때문에
index number는 각
0 : 1
1 : seungwon
2 : 사과
를 지시한다.
"""
############################################################################
# 리스트 요소를 "추가" 하고 싶으면?
# 프로그램 중간에 내가 추가 하고 싶은 데이터가 있다면? 우선 input으로 그 데이터를 받아와 보자
addData = input("추가할 데이터 : ")

dataList.append(addData)
# append라는 것을 사용해서 데이터를 리스트에 추가시킬 수 있다.
# * append() 함수는 python에서 리스트의 끝에 새로운 요소를 추가하는 메소드이다.

print(dataList)
# dataList라는 리스트를 전부 출력해 줌.
#############################################################################
# 리스트 요소를 "삭제" 하고 싶으면?
# remove() 함수를 사용하여 삭제하고 싶은 요소를 지정해주면 삭제 된다.
dataList.remove("사과")

print(dataList)
############################################################################
# 리스트 요소를 "바꾸고" 싶으면?
# 리스트의 인덱스 번호를 이용하여 바꿀 수 있다.
dataList[2] = "복숭아"

print(dataList)
############################################################################
# 리스트 요소의 길이를 보려면?
# len() 함수를 활용하면 리스트 안에 몇개의 요소가 들어있는지 알려준다
len(dataList)
print(len(dataList))
